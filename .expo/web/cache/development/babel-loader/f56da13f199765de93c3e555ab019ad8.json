{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\Amanda\\\\Documents\\\\KOMA\\\\project\\\\MTDuellen\\\\node_modules\\\\react-native-modalbox\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    SCREEN_HEIGHT = _Dimensions$get.height,\n    SCREEN_WIDTH = _Dimensions$get.width;\n\nvar styles = _reactNative.StyleSheet.create({\n  wrapper: {\n    backgroundColor: 'white'\n  },\n  transparent: {\n    zIndex: 2,\n    backgroundColor: 'rgba(0,0,0,0)'\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n});\n\nvar ModalBox = function (_React$PureComponent) {\n  (0, _inherits2.default)(ModalBox, _React$PureComponent);\n\n  var _super = _createSuper(ModalBox);\n\n  function ModalBox(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ModalBox);\n    _this = _super.call(this, props);\n    _this.onBackPress = _this.onBackPress.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleOpenning = _this.handleOpenning.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onKeyboardHide = _this.onKeyboardHide.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onKeyboardChange = _this.onKeyboardChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.animateBackdropOpen = _this.animateBackdropOpen.bind((0, _assertThisInitialized2.default)(_this));\n    _this.animateBackdropClose = _this.animateBackdropClose.bind((0, _assertThisInitialized2.default)(_this));\n    _this.stopAnimateOpen = _this.stopAnimateOpen.bind((0, _assertThisInitialized2.default)(_this));\n    _this.animateOpen = _this.animateOpen.bind((0, _assertThisInitialized2.default)(_this));\n    _this.stopAnimateClose = _this.stopAnimateClose.bind((0, _assertThisInitialized2.default)(_this));\n    _this.animateClose = _this.animateClose.bind((0, _assertThisInitialized2.default)(_this));\n    _this.calculateModalPosition = _this.calculateModalPosition.bind((0, _assertThisInitialized2.default)(_this));\n    _this.createPanResponder = _this.createPanResponder.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onViewLayout = _this.onViewLayout.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onContainerLayout = _this.onContainerLayout.bind((0, _assertThisInitialized2.default)(_this));\n    _this.renderBackdrop = _this.renderBackdrop.bind((0, _assertThisInitialized2.default)(_this));\n    _this.renderContent = _this.renderContent.bind((0, _assertThisInitialized2.default)(_this));\n    _this.open = _this.open.bind((0, _assertThisInitialized2.default)(_this));\n    _this.close = _this.close.bind((0, _assertThisInitialized2.default)(_this));\n    var position = props.startOpen ? new _reactNative.Animated.Value(0) : new _reactNative.Animated.Value(props.entry === 'top' ? -SCREEN_HEIGHT : SCREEN_HEIGHT);\n    _this.state = {\n      position: position,\n      backdropOpacity: new _reactNative.Animated.Value(0),\n      isOpen: props.startOpen,\n      isAnimateClose: false,\n      isAnimateOpen: false,\n      swipeToClose: false,\n      height: SCREEN_HEIGHT,\n      width: SCREEN_WIDTH,\n      containerHeight: SCREEN_HEIGHT,\n      containerWidth: SCREEN_WIDTH,\n      isInitialized: false,\n      keyboardOffset: 0,\n      pan: _this.createPanResponder(position)\n    };\n\n    if (_reactNative.Platform.OS === 'ios') {\n      _this.subscriptions = [_reactNative.Keyboard.addListener('keyboardWillChangeFrame', _this.onKeyboardChange), _reactNative.Keyboard.addListener('keyboardDidHide', _this.onKeyboardHide)];\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(ModalBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleOpenning();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.isOpen != prevProps.isOpen) {\n        this.handleOpenning();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.subscriptions) this.subscriptions.forEach(function (sub) {\n        return sub.remove();\n      });\n      if (this.props.backButtonClose && _reactNative.Platform.OS === 'android') _reactNative.BackHandler.removeEventListener('hardwareBackPress', this.onBackPress);\n    }\n  }, {\n    key: \"onBackPress\",\n    value: function onBackPress() {\n      this.close();\n      return true;\n    }\n  }, {\n    key: \"handleOpenning\",\n    value: function handleOpenning() {\n      if (typeof this.props.isOpen == 'undefined') return;\n      if (this.props.isOpen) this.open();else this.close();\n    }\n  }, {\n    key: \"onKeyboardHide\",\n    value: function onKeyboardHide(evt) {\n      this.setState({\n        keyboardOffset: 0\n      });\n    }\n  }, {\n    key: \"onKeyboardChange\",\n    value: function onKeyboardChange(evt) {\n      var _this2 = this;\n\n      if (!evt) return;\n      if (!this.state.isOpen) return;\n      var keyboardFrame = evt.endCoordinates;\n      var keyboardHeight = this.state.containerHeight - keyboardFrame.screenY;\n      this.setState({\n        keyboardOffset: keyboardHeight\n      }, function () {\n        _this2.animateOpen();\n      });\n    }\n  }, {\n    key: \"animateBackdropOpen\",\n    value: function animateBackdropOpen() {\n      var _this3 = this;\n\n      if (this.state.isAnimateBackdrop && this.state.animBackdrop) {\n        this.state.animBackdrop.stop();\n      }\n\n      this.setState({\n        isAnimateBackdrop: true\n      });\n\n      var animBackdrop = _reactNative.Animated.timing(this.state.backdropOpacity, {\n        toValue: 1,\n        duration: this.props.animationDuration,\n        easing: this.props.easing,\n        useNativeDriver: this.props.useNativeDriver\n      }).start(function () {\n        _this3.setState({\n          isAnimateBackdrop: false,\n          animBackdrop: animBackdrop\n        });\n      });\n    }\n  }, {\n    key: \"animateBackdropClose\",\n    value: function animateBackdropClose() {\n      var _this4 = this;\n\n      if (this.state.isAnimateBackdrop && this.state.animBackdrop) {\n        this.state.animBackdrop.stop();\n      }\n\n      this.setState({\n        isAnimateBackdrop: true\n      });\n\n      var animBackdrop = _reactNative.Animated.timing(this.state.backdropOpacity, {\n        toValue: 0,\n        duration: this.props.animationDuration,\n        easing: this.props.easing,\n        useNativeDriver: this.props.useNativeDriver\n      }).start(function () {\n        _this4.setState({\n          isAnimateBackdrop: false,\n          animBackdrop: animBackdrop\n        });\n      });\n    }\n  }, {\n    key: \"stopAnimateOpen\",\n    value: function stopAnimateOpen() {\n      if (this.state.isAnimateOpen) {\n        if (this.state.animOpen) this.state.animOpen.stop();\n        this.setState({\n          isAnimateOpen: false\n        });\n      }\n    }\n  }, {\n    key: \"animateOpen\",\n    value: function animateOpen() {\n      var _this5 = this;\n\n      this.stopAnimateClose();\n      if (this.props.backdrop) this.animateBackdropOpen();\n      this.setState({\n        isAnimateOpen: true,\n        isOpen: true\n      }, function () {\n        requestAnimationFrame(function () {\n          var positionDest = _this5.calculateModalPosition(_this5.state.containerHeight - _this5.state.keyboardOffset, _this5.state.containerWidth);\n\n          if (_this5.state.keyboardOffset && positionDest < _this5.props.keyboardTopOffset) {\n            positionDest = _this5.props.keyboardTopOffset;\n          }\n\n          var animOpen = _reactNative.Animated.timing(_this5.state.position, {\n            toValue: positionDest,\n            duration: _this5.props.animationDuration,\n            easing: _this5.props.easing,\n            useNativeDriver: _this5.props.useNativeDriver\n          }).start(function () {\n            _this5.setState({\n              isAnimateOpen: false,\n              animOpen: animOpen,\n              positionDest: positionDest\n            });\n\n            if (_this5.props.onOpened) _this5.props.onOpened();\n          });\n        });\n      });\n    }\n  }, {\n    key: \"stopAnimateClose\",\n    value: function stopAnimateClose() {\n      if (this.state.isAnimateClose) {\n        if (this.state.animClose) this.state.animClose.stop();\n        this.setState({\n          isAnimateClose: false\n        });\n      }\n    }\n  }, {\n    key: \"animateClose\",\n    value: function animateClose() {\n      var _this6 = this;\n\n      this.stopAnimateOpen();\n      if (this.props.backdrop) this.animateBackdropClose();\n      this.setState({\n        isAnimateClose: true,\n        isOpen: false\n      }, function () {\n        var animClose = _reactNative.Animated.timing(_this6.state.position, {\n          toValue: _this6.props.entry === 'top' ? -_this6.state.containerHeight : _this6.state.containerHeight,\n          duration: _this6.props.animationDuration,\n          easing: _this6.props.easing,\n          useNativeDriver: _this6.props.useNativeDriver\n        }).start(function () {\n          _this6.setState({\n            isAnimateClose: false,\n            animClose: animClose\n          }, function () {\n            _this6.state.position.setValue(_this6.props.entry === 'top' ? -_this6.state.containerHeight : _this6.state.containerHeight);\n          });\n\n          if (_this6.props.onClosed) _this6.props.onClosed();\n        });\n      });\n    }\n  }, {\n    key: \"calculateModalPosition\",\n    value: function calculateModalPosition(containerHeight, containerWidth) {\n      var position = 0;\n\n      if (this.props.position == 'bottom') {\n        position = containerHeight - this.state.height;\n      } else if (this.props.position == 'center') {\n        position = containerHeight / 2 - this.state.height / 2;\n      }\n\n      if (position < 0) position = 0;\n      return position;\n    }\n  }, {\n    key: \"createPanResponder\",\n    value: function createPanResponder(position) {\n      var _this7 = this;\n\n      var closingState = false;\n      var inSwipeArea = false;\n\n      var onPanStart = function onPanStart(evt, state) {\n        if (!_this7.props.swipeToClose || _this7.props.isDisabled || _this7.props.swipeArea && evt.nativeEvent.pageY - _this7.state.positionDest > _this7.props.swipeArea) {\n          inSwipeArea = false;\n          return false;\n        }\n\n        inSwipeArea = true;\n        return true;\n      };\n\n      var animEvt = _reactNative.Animated.event([null, {\n        customY: position\n      }], {\n        useNativeDriver: false\n      });\n\n      var onPanMove = function onPanMove(evt, state) {\n        var newClosingState = _this7.props.entry === 'top' ? -state.dy > _this7.props.swipeThreshold : state.dy > _this7.props.swipeThreshold;\n        if (_this7.props.entry === 'top' ? state.dy > 0 : state.dy < 0) return;\n        if (newClosingState != closingState && _this7.props.onClosingState) _this7.props.onClosingState(newClosingState);\n        closingState = newClosingState;\n        state.customY = state.dy + _this7.state.positionDest;\n        animEvt(evt, state);\n      };\n\n      var onPanRelease = function onPanRelease(evt, state) {\n        if (!inSwipeArea) return;\n        inSwipeArea = false;\n\n        if (_this7.props.entry === 'top' ? -state.dy > _this7.props.swipeThreshold : state.dy > _this7.props.swipeThreshold) {\n          _this7.close();\n        } else if (!_this7.state.isOpen) {\n          _this7.animateOpen();\n        }\n      };\n\n      return _reactNative.PanResponder.create({\n        onStartShouldSetPanResponder: onPanStart,\n        onPanResponderMove: onPanMove,\n        onPanResponderRelease: onPanRelease,\n        onPanResponderTerminate: onPanRelease\n      });\n    }\n  }, {\n    key: \"onViewLayout\",\n    value: function onViewLayout(evt) {\n      var height = evt.nativeEvent.layout.height;\n      var width = evt.nativeEvent.layout.width;\n      var newState = {};\n      if (height !== this.state.height) newState.height = height;\n      if (width !== this.state.width) newState.width = width;\n      this.setState(newState);\n      if (this.onViewLayoutCalculated) this.onViewLayoutCalculated();\n    }\n  }, {\n    key: \"onContainerLayout\",\n    value: function onContainerLayout(evt) {\n      var height = evt.nativeEvent.layout.height;\n      var width = evt.nativeEvent.layout.width;\n\n      if (height == this.state.containerHeight && width == this.state.containerWidth) {\n        this.setState({\n          isInitialized: true\n        });\n        return;\n      }\n\n      if (this.state.isOpen || this.state.isAnimateOpen) {\n        this.animateOpen();\n      }\n\n      if (this.props.onLayout) this.props.onLayout(evt);\n      this.setState({\n        isInitialized: true,\n        containerHeight: height,\n        containerWidth: width\n      });\n    }\n  }, {\n    key: \"renderBackdrop\",\n    value: function renderBackdrop() {\n      var backdrop = null;\n\n      if (this.props.backdrop) {\n        backdrop = _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n          onPress: this.props.backdropPressToClose ? this.close : null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 9\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          importantForAccessibility: \"no\",\n          style: [styles.absolute, {\n            opacity: this.state.backdropOpacity\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 11\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: [styles.absolute, {\n            backgroundColor: this.props.backdropColor,\n            opacity: this.props.backdropOpacity\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }\n        }), this.props.backdropContent || []));\n      }\n\n      return backdrop;\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var size = {\n        height: this.state.containerHeight,\n        width: this.state.containerWidth\n      };\n      var offsetX = (this.state.containerWidth - this.state.width) / 2;\n      return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({\n        onLayout: this.onViewLayout,\n        style: [styles.wrapper, size, this.props.style, {\n          transform: [{\n            translateY: this.state.position\n          }, {\n            translateX: offsetX\n          }]\n        }]\n      }, this.state.pan.panHandlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 7\n        }\n      }), this.props.children);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var visible = this.state.isOpen || this.state.isAnimateOpen || this.state.isAnimateClose;\n      if (!visible) return _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 26\n        }\n      });\n\n      var content = _react.default.createElement(_reactNative.View, {\n        importantForAccessibility: \"yes\",\n        accessibilityViewIsModal: true,\n        style: [styles.transparent, styles.absolute],\n        pointerEvents: 'box-none',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1\n        },\n        pointerEvents: 'box-none',\n        onLayout: this.onContainerLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 9\n        }\n      }, visible && this.renderBackdrop(), visible && this.renderContent()));\n\n      if (!this.props.coverScreen) return content;\n      return _react.default.createElement(_reactNative.Modal, {\n        onRequestClose: function onRequestClose() {\n          if (_this8.props.backButtonClose) {\n            _this8.close();\n          }\n        },\n        supportedOrientations: ['landscape', 'portrait', 'portrait-upside-down'],\n        transparent: true,\n        visible: visible,\n        hardwareAccelerated: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 7\n        }\n      }, content);\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this9 = this;\n\n      if (this.props.isDisabled) return;\n\n      if (!this.state.isAnimateOpen && (!this.state.isOpen || this.state.isAnimateClose)) {\n        this.onViewLayoutCalculated = function () {\n          _this9.animateOpen();\n\n          if (_this9.props.backButtonClose && _reactNative.Platform.OS === 'android') _reactNative.BackHandler.addEventListener('hardwareBackPress', _this9.onBackPress);\n          _this9.onViewLayoutCalculated = null;\n        };\n\n        this.setState({\n          isAnimateOpen: true\n        });\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.props.isDisabled) return;\n\n      if (!this.state.isAnimateClose && (this.state.isOpen || this.state.isAnimateOpen)) {\n        this.animateClose();\n        if (this.props.backButtonClose && _reactNative.Platform.OS === 'android') _reactNative.BackHandler.removeEventListener('hardwareBackPress', this.onBackPress);\n      }\n    }\n  }]);\n  return ModalBox;\n}(_react.default.PureComponent);\n\nexports.default = ModalBox;\nModalBox.propTypes = {\n  isOpen: _propTypes.default.bool,\n  isDisabled: _propTypes.default.bool,\n  startOpen: _propTypes.default.bool,\n  backdropPressToClose: _propTypes.default.bool,\n  swipeToClose: _propTypes.default.bool,\n  swipeThreshold: _propTypes.default.number,\n  swipeArea: _propTypes.default.number,\n  position: _propTypes.default.string,\n  entry: _propTypes.default.string,\n  backdrop: _propTypes.default.bool,\n  backdropOpacity: _propTypes.default.number,\n  backdropColor: _propTypes.default.string,\n  backdropContent: _propTypes.default.element,\n  animationDuration: _propTypes.default.number,\n  backButtonClose: _propTypes.default.bool,\n  easing: _propTypes.default.func,\n  coverScreen: _propTypes.default.bool,\n  keyboardTopOffset: _propTypes.default.number,\n  onClosed: _propTypes.default.func,\n  onOpened: _propTypes.default.func,\n  onClosingState: _propTypes.default.func\n};\nModalBox.defaultProps = {\n  startOpen: false,\n  backdropPressToClose: true,\n  swipeToClose: true,\n  swipeThreshold: 50,\n  position: 'center',\n  backdrop: true,\n  backdropOpacity: 0.5,\n  backdropColor: 'black',\n  backdropContent: null,\n  animationDuration: 400,\n  backButtonClose: false,\n  easing: _reactNative.Easing.elastic(0.8),\n  coverScreen: false,\n  keyboardTopOffset: _reactNative.Platform.OS == 'ios' ? 22 : 0,\n  useNativeDriver: true\n};","map":{"version":3,"sources":["C:/Users/Amanda/Documents/KOMA/project/MTDuellen/node_modules/react-native-modalbox/index.js"],"names":["Dimensions","get","SCREEN_HEIGHT","height","SCREEN_WIDTH","width","styles","StyleSheet","create","wrapper","backgroundColor","transparent","zIndex","absolute","position","top","bottom","left","right","ModalBox","props","onBackPress","bind","handleOpenning","onKeyboardHide","onKeyboardChange","animateBackdropOpen","animateBackdropClose","stopAnimateOpen","animateOpen","stopAnimateClose","animateClose","calculateModalPosition","createPanResponder","onViewLayout","onContainerLayout","renderBackdrop","renderContent","open","close","startOpen","Animated","Value","entry","state","backdropOpacity","isOpen","isAnimateClose","isAnimateOpen","swipeToClose","containerHeight","containerWidth","isInitialized","keyboardOffset","pan","Platform","OS","subscriptions","Keyboard","addListener","prevProps","forEach","sub","remove","backButtonClose","BackHandler","removeEventListener","evt","setState","keyboardFrame","endCoordinates","keyboardHeight","screenY","isAnimateBackdrop","animBackdrop","stop","timing","toValue","duration","animationDuration","easing","useNativeDriver","start","animOpen","backdrop","requestAnimationFrame","positionDest","keyboardTopOffset","onOpened","animClose","setValue","onClosed","closingState","inSwipeArea","onPanStart","isDisabled","swipeArea","nativeEvent","pageY","animEvt","event","customY","onPanMove","newClosingState","dy","swipeThreshold","onClosingState","onPanRelease","PanResponder","onStartShouldSetPanResponder","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","layout","newState","onViewLayoutCalculated","onLayout","backdropPressToClose","opacity","backdropColor","backdropContent","size","offsetX","style","transform","translateY","translateX","panHandlers","children","visible","content","flex","coverScreen","addEventListener","React","PureComponent","propTypes","PropTypes","bool","number","string","element","func","defaultProps","Easing","elastic"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;sBAcqDA,wBAAWC,GAAX,CAAe,QAAf,C;IAAtCC,a,mBAARC,M;IAA8BC,Y,mBAAPC,K;;AAC9B,IAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE;AADV,GADsB;AAI/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,CADG;AAEXF,IAAAA,eAAe,EAAE;AAFN,GAJkB;AAQ/BG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,UADF;AAERC,IAAAA,GAAG,EAAE,CAFG;AAGRC,IAAAA,MAAM,EAAE,CAHA;AAIRC,IAAAA,IAAI,EAAE,CAJE;AAKRC,IAAAA,KAAK,EAAE;AALC;AARqB,CAAlB,CAAf;;IAiBqBC,Q;;;;;AA2CnB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,6CAAnB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,6CAAtB;AACA,UAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,6CAAtB;AACA,UAAKG,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBH,IAAtB,6CAAxB;AACA,UAAKI,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBJ,IAAzB,6CAA3B;AACA,UAAKK,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BL,IAA1B,6CAA5B;AACA,UAAKM,eAAL,GAAuB,MAAKA,eAAL,CAAqBN,IAArB,6CAAvB;AACA,UAAKO,WAAL,GAAmB,MAAKA,WAAL,CAAiBP,IAAjB,6CAAnB;AACA,UAAKQ,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBR,IAAtB,6CAAxB;AACA,UAAKS,YAAL,GAAoB,MAAKA,YAAL,CAAkBT,IAAlB,6CAApB;AACA,UAAKU,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BV,IAA5B,6CAA9B;AACA,UAAKW,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBX,IAAxB,6CAA1B;AACA,UAAKY,YAAL,GAAoB,MAAKA,YAAL,CAAkBZ,IAAlB,6CAApB;AACA,UAAKa,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBb,IAAvB,6CAAzB;AACA,UAAKc,cAAL,GAAsB,MAAKA,cAAL,CAAoBd,IAApB,6CAAtB;AACA,UAAKe,aAAL,GAAqB,MAAKA,aAAL,CAAmBf,IAAnB,6CAArB;AACA,UAAKgB,IAAL,GAAY,MAAKA,IAAL,CAAUhB,IAAV,6CAAZ;AACA,UAAKiB,KAAL,GAAa,MAAKA,KAAL,CAAWjB,IAAX,6CAAb;AAEA,QAAMR,QAAQ,GAAGM,KAAK,CAACoB,SAAN,GACb,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CADa,GAEb,IAAID,sBAASC,KAAb,CACEtB,KAAK,CAACuB,KAAN,KAAgB,KAAhB,GAAwB,CAACzC,aAAzB,GAAyCA,aAD3C,CAFJ;AAKA,UAAK0C,KAAL,GAAa;AACX9B,MAAAA,QAAQ,EAARA,QADW;AAEX+B,MAAAA,eAAe,EAAE,IAAIJ,sBAASC,KAAb,CAAmB,CAAnB,CAFN;AAGXI,MAAAA,MAAM,EAAE1B,KAAK,CAACoB,SAHH;AAIXO,MAAAA,cAAc,EAAE,KAJL;AAKXC,MAAAA,aAAa,EAAE,KALJ;AAMXC,MAAAA,YAAY,EAAE,KANH;AAOX9C,MAAAA,MAAM,EAAED,aAPG;AAQXG,MAAAA,KAAK,EAAED,YARI;AASX8C,MAAAA,eAAe,EAAEhD,aATN;AAUXiD,MAAAA,cAAc,EAAE/C,YAVL;AAWXgD,MAAAA,aAAa,EAAE,KAXJ;AAYXC,MAAAA,cAAc,EAAE,CAZL;AAaXC,MAAAA,GAAG,EAAE,MAAKrB,kBAAL,CAAwBnB,QAAxB;AAbM,KAAb;;AAiBA,QAAIyC,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB,YAAKC,aAAL,GAAqB,CACnBC,sBAASC,WAAT,CAAqB,yBAArB,EAAgD,MAAKlC,gBAArD,CADmB,EAEnBiC,sBAASC,WAAT,CAAqB,iBAArB,EAAwC,MAAKnC,cAA7C,CAFmB,CAArB;AAID;;AAjDgB;AAkDlB;;;;wCAEmB;AAClB,WAAKD,cAAL;AACD;;;uCAEkBqC,S,EAAW;AAC5B,UAAI,KAAKxC,KAAL,CAAW0B,MAAX,IAAqBc,SAAS,CAACd,MAAnC,EAA2C;AACzC,aAAKvB,cAAL;AACD;AACF;;;2CAEsB;AACrB,UAAI,KAAKkC,aAAT,EAAwB,KAAKA,aAAL,CAAmBI,OAAnB,CAA2B,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,MAAJ,EAAJ;AAAA,OAA9B;AACxB,UAAI,KAAK3C,KAAL,CAAW4C,eAAX,IAA8BT,sBAASC,EAAT,KAAgB,SAAlD,EACES,yBAAYC,mBAAZ,CAAgC,mBAAhC,EAAqD,KAAK7C,WAA1D;AACH;;;kCAEa;AACZ,WAAKkB,KAAL;AACA,aAAO,IAAP;AACD;;;qCAEgB;AACf,UAAI,OAAO,KAAKnB,KAAL,CAAW0B,MAAlB,IAA4B,WAAhC,EAA6C;AAC7C,UAAI,KAAK1B,KAAL,CAAW0B,MAAf,EAAuB,KAAKR,IAAL,GAAvB,KACK,KAAKC,KAAL;AACN;;;mCAOc4B,G,EAAK;AAClB,WAAKC,QAAL,CAAc;AAACf,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD;;;qCAKgBc,G,EAAK;AAAA;;AACpB,UAAI,CAACA,GAAL,EAAU;AACV,UAAI,CAAC,KAAKvB,KAAL,CAAWE,MAAhB,EAAwB;AACxB,UAAMuB,aAAa,GAAGF,GAAG,CAACG,cAA1B;AACA,UAAMC,cAAc,GAAG,KAAK3B,KAAL,CAAWM,eAAX,GAA6BmB,aAAa,CAACG,OAAlE;AAEA,WAAKJ,QAAL,CAAc;AAACf,QAAAA,cAAc,EAAEkB;AAAjB,OAAd,EAAgD,YAAM;AACpD,QAAA,MAAI,CAAC1C,WAAL;AACD,OAFD;AAGD;;;0CAKqB;AAAA;;AACpB,UAAI,KAAKe,KAAL,CAAW6B,iBAAX,IAAgC,KAAK7B,KAAL,CAAW8B,YAA/C,EAA6D;AAC3D,aAAK9B,KAAL,CAAW8B,YAAX,CAAwBC,IAAxB;AACD;;AACD,WAAKP,QAAL,CAAc;AAACK,QAAAA,iBAAiB,EAAE;AAApB,OAAd;;AAEA,UAAIC,YAAY,GAAGjC,sBAASmC,MAAT,CAAgB,KAAKhC,KAAL,CAAWC,eAA3B,EAA4C;AAC7DgC,QAAAA,OAAO,EAAE,CADoD;AAE7DC,QAAAA,QAAQ,EAAE,KAAK1D,KAAL,CAAW2D,iBAFwC;AAG7DC,QAAAA,MAAM,EAAE,KAAK5D,KAAL,CAAW4D,MAH0C;AAI7DC,QAAAA,eAAe,EAAE,KAAK7D,KAAL,CAAW6D;AAJiC,OAA5C,EAKhBC,KALgB,CAKV,YAAM;AACb,QAAA,MAAI,CAACd,QAAL,CAAc;AACZK,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAZA;AAFY,SAAd;AAID,OAVkB,CAAnB;AAWD;;;2CAKsB;AAAA;;AACrB,UAAI,KAAK9B,KAAL,CAAW6B,iBAAX,IAAgC,KAAK7B,KAAL,CAAW8B,YAA/C,EAA6D;AAC3D,aAAK9B,KAAL,CAAW8B,YAAX,CAAwBC,IAAxB;AACD;;AACD,WAAKP,QAAL,CAAc;AAACK,QAAAA,iBAAiB,EAAE;AAApB,OAAd;;AAEA,UAAIC,YAAY,GAAGjC,sBAASmC,MAAT,CAAgB,KAAKhC,KAAL,CAAWC,eAA3B,EAA4C;AAC7DgC,QAAAA,OAAO,EAAE,CADoD;AAE7DC,QAAAA,QAAQ,EAAE,KAAK1D,KAAL,CAAW2D,iBAFwC;AAG7DC,QAAAA,MAAM,EAAE,KAAK5D,KAAL,CAAW4D,MAH0C;AAI7DC,QAAAA,eAAe,EAAE,KAAK7D,KAAL,CAAW6D;AAJiC,OAA5C,EAKhBC,KALgB,CAKV,YAAM;AACb,QAAA,MAAI,CAACd,QAAL,CAAc;AACZK,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAZA;AAFY,SAAd;AAID,OAVkB,CAAnB;AAWD;;;sCAKiB;AAChB,UAAI,KAAK9B,KAAL,CAAWI,aAAf,EAA8B;AAC5B,YAAI,KAAKJ,KAAL,CAAWuC,QAAf,EAAyB,KAAKvC,KAAL,CAAWuC,QAAX,CAAoBR,IAApB;AACzB,aAAKP,QAAL,CAAc;AAACpB,UAAAA,aAAa,EAAE;AAAhB,SAAd;AACD;AACF;;;kCAKa;AAAA;;AACZ,WAAKlB,gBAAL;AAGA,UAAI,KAAKV,KAAL,CAAWgE,QAAf,EAAyB,KAAK1D,mBAAL;AAEzB,WAAK0C,QAAL,CACE;AACEpB,QAAAA,aAAa,EAAE,IADjB;AAEEF,QAAAA,MAAM,EAAE;AAFV,OADF,EAKE,YAAM;AACJuC,QAAAA,qBAAqB,CAAC,YAAM;AAE1B,cAAIC,YAAY,GAAG,MAAI,CAACtD,sBAAL,CACjB,MAAI,CAACY,KAAL,CAAWM,eAAX,GAA6B,MAAI,CAACN,KAAL,CAAWS,cADvB,EAEjB,MAAI,CAACT,KAAL,CAAWO,cAFM,CAAnB;;AAIA,cACE,MAAI,CAACP,KAAL,CAAWS,cAAX,IACAiC,YAAY,GAAG,MAAI,CAAClE,KAAL,CAAWmE,iBAF5B,EAGE;AACAD,YAAAA,YAAY,GAAG,MAAI,CAAClE,KAAL,CAAWmE,iBAA1B;AACD;;AACD,cAAIJ,QAAQ,GAAG1C,sBAASmC,MAAT,CAAgB,MAAI,CAAChC,KAAL,CAAW9B,QAA3B,EAAqC;AAClD+D,YAAAA,OAAO,EAAES,YADyC;AAElDR,YAAAA,QAAQ,EAAE,MAAI,CAAC1D,KAAL,CAAW2D,iBAF6B;AAGlDC,YAAAA,MAAM,EAAE,MAAI,CAAC5D,KAAL,CAAW4D,MAH+B;AAIlDC,YAAAA,eAAe,EAAE,MAAI,CAAC7D,KAAL,CAAW6D;AAJsB,WAArC,EAKZC,KALY,CAKN,YAAM;AACb,YAAA,MAAI,CAACd,QAAL,CAAc;AACZpB,cAAAA,aAAa,EAAE,KADH;AAEZmC,cAAAA,QAAQ,EAARA,QAFY;AAGZG,cAAAA,YAAY,EAAZA;AAHY,aAAd;;AAKA,gBAAI,MAAI,CAAClE,KAAL,CAAWoE,QAAf,EAAyB,MAAI,CAACpE,KAAL,CAAWoE,QAAX;AAC1B,WAZc,CAAf;AAaD,SAzBoB,CAArB;AA0BD,OAhCH;AAkCD;;;uCAKkB;AACjB,UAAI,KAAK5C,KAAL,CAAWG,cAAf,EAA+B;AAC7B,YAAI,KAAKH,KAAL,CAAW6C,SAAf,EAA0B,KAAK7C,KAAL,CAAW6C,SAAX,CAAqBd,IAArB;AAC1B,aAAKP,QAAL,CAAc;AAACrB,UAAAA,cAAc,EAAE;AAAjB,SAAd;AACD;AACF;;;mCAKc;AAAA;;AACb,WAAKnB,eAAL;AAGA,UAAI,KAAKR,KAAL,CAAWgE,QAAf,EAAyB,KAAKzD,oBAAL;AAEzB,WAAKyC,QAAL,CACE;AACErB,QAAAA,cAAc,EAAE,IADlB;AAEED,QAAAA,MAAM,EAAE;AAFV,OADF,EAKE,YAAM;AACJ,YAAI2C,SAAS,GAAGhD,sBAASmC,MAAT,CAAgB,MAAI,CAAChC,KAAL,CAAW9B,QAA3B,EAAqC;AACnD+D,UAAAA,OAAO,EACL,MAAI,CAACzD,KAAL,CAAWuB,KAAX,KAAqB,KAArB,GACI,CAAC,MAAI,CAACC,KAAL,CAAWM,eADhB,GAEI,MAAI,CAACN,KAAL,CAAWM,eAJkC;AAKnD4B,UAAAA,QAAQ,EAAE,MAAI,CAAC1D,KAAL,CAAW2D,iBAL8B;AAMnDC,UAAAA,MAAM,EAAE,MAAI,CAAC5D,KAAL,CAAW4D,MANgC;AAOnDC,UAAAA,eAAe,EAAE,MAAI,CAAC7D,KAAL,CAAW6D;AAPuB,SAArC,EAQbC,KARa,CAQP,YAAM;AAEb,UAAA,MAAI,CAACd,QAAL,CAAc;AACZrB,YAAAA,cAAc,EAAE,KADJ;AAEZ0C,YAAAA,SAAS,EAATA;AAFY,WAAd,EAGG,YAAM;AAEP,YAAA,MAAI,CAAC7C,KAAL,CAAW9B,QAAX,CAAoB4E,QAApB,CAA6B,MAAI,CAACtE,KAAL,CAAWuB,KAAX,KAAqB,KAArB,GAA6B,CAAC,MAAI,CAACC,KAAL,CAAWM,eAAzC,GAA2D,MAAI,CAACN,KAAL,CAAWM,eAAnG;AACD,WAND;;AAOA,cAAI,MAAI,CAAC9B,KAAL,CAAWuE,QAAf,EAAyB,MAAI,CAACvE,KAAL,CAAWuE,QAAX;AAC1B,SAlBe,CAAhB;AAmBD,OAzBH;AA2BD;;;2CAKsBzC,e,EAAiBC,c,EAAgB;AACtD,UAAIrC,QAAQ,GAAG,CAAf;;AAEA,UAAI,KAAKM,KAAL,CAAWN,QAAX,IAAuB,QAA3B,EAAqC;AACnCA,QAAAA,QAAQ,GAAGoC,eAAe,GAAG,KAAKN,KAAL,CAAWzC,MAAxC;AACD,OAFD,MAEO,IAAI,KAAKiB,KAAL,CAAWN,QAAX,IAAuB,QAA3B,EAAqC;AAC1CA,QAAAA,QAAQ,GAAGoC,eAAe,GAAG,CAAlB,GAAsB,KAAKN,KAAL,CAAWzC,MAAX,GAAoB,CAArD;AACD;;AAED,UAAIW,QAAQ,GAAG,CAAf,EAAkBA,QAAQ,GAAG,CAAX;AAClB,aAAOA,QAAP;AACD;;;uCAMkBA,Q,EAAU;AAAA;;AAC3B,UAAI8E,YAAY,GAAG,KAAnB;AACA,UAAIC,WAAW,GAAG,KAAlB;;AAEA,UAAMC,UAAU,GAAG,SAAbA,UAAa,CAAC3B,GAAD,EAAMvB,KAAN,EAAgB;AACjC,YACE,CAAC,MAAI,CAACxB,KAAL,CAAW6B,YAAZ,IACA,MAAI,CAAC7B,KAAL,CAAW2E,UADX,IAEC,MAAI,CAAC3E,KAAL,CAAW4E,SAAX,IACC7B,GAAG,CAAC8B,WAAJ,CAAgBC,KAAhB,GAAwB,MAAI,CAACtD,KAAL,CAAW0C,YAAnC,GACE,MAAI,CAAClE,KAAL,CAAW4E,SALjB,EAME;AACAH,UAAAA,WAAW,GAAG,KAAd;AACA,iBAAO,KAAP;AACD;;AACDA,QAAAA,WAAW,GAAG,IAAd;AACA,eAAO,IAAP;AACD,OAbD;;AAeA,UAAMM,OAAO,GAAG1D,sBAAS2D,KAAT,CAAe,CAAC,IAAD,EAAO;AAACC,QAAAA,OAAO,EAAEvF;AAAV,OAAP,CAAf,EAA4C;AAACmE,QAAAA,eAAe,EAAE;AAAlB,OAA5C,CAAhB;;AAEA,UAAMqB,SAAS,GAAG,SAAZA,SAAY,CAACnC,GAAD,EAAMvB,KAAN,EAAgB;AAChC,YAAM2D,eAAe,GACnB,MAAI,CAACnF,KAAL,CAAWuB,KAAX,KAAqB,KAArB,GACI,CAACC,KAAK,CAAC4D,EAAP,GAAY,MAAI,CAACpF,KAAL,CAAWqF,cAD3B,GAEI7D,KAAK,CAAC4D,EAAN,GAAW,MAAI,CAACpF,KAAL,CAAWqF,cAH5B;AAIA,YAAI,MAAI,CAACrF,KAAL,CAAWuB,KAAX,KAAqB,KAArB,GAA6BC,KAAK,CAAC4D,EAAN,GAAW,CAAxC,GAA4C5D,KAAK,CAAC4D,EAAN,GAAW,CAA3D,EAA8D;AAC9D,YAAID,eAAe,IAAIX,YAAnB,IAAmC,MAAI,CAACxE,KAAL,CAAWsF,cAAlD,EACE,MAAI,CAACtF,KAAL,CAAWsF,cAAX,CAA0BH,eAA1B;AACFX,QAAAA,YAAY,GAAGW,eAAf;AACA3D,QAAAA,KAAK,CAACyD,OAAN,GAAgBzD,KAAK,CAAC4D,EAAN,GAAW,MAAI,CAAC5D,KAAL,CAAW0C,YAAtC;AAEAa,QAAAA,OAAO,CAAChC,GAAD,EAAMvB,KAAN,CAAP;AACD,OAZD;;AAcA,UAAM+D,YAAY,GAAG,SAAfA,YAAe,CAACxC,GAAD,EAAMvB,KAAN,EAAgB;AACnC,YAAI,CAACiD,WAAL,EAAkB;AAClBA,QAAAA,WAAW,GAAG,KAAd;;AACA,YACE,MAAI,CAACzE,KAAL,CAAWuB,KAAX,KAAqB,KAArB,GACI,CAACC,KAAK,CAAC4D,EAAP,GAAY,MAAI,CAACpF,KAAL,CAAWqF,cAD3B,GAEI7D,KAAK,CAAC4D,EAAN,GAAW,MAAI,CAACpF,KAAL,CAAWqF,cAH5B,EAIE;AACA,UAAA,MAAI,CAAClE,KAAL;AACD,SAND,MAMO,IAAI,CAAC,MAAI,CAACK,KAAL,CAAWE,MAAhB,EAAwB;AAC7B,UAAA,MAAI,CAACjB,WAAL;AACD;AACF,OAZD;;AAcA,aAAO+E,0BAAapG,MAAb,CAAoB;AACzBqG,QAAAA,4BAA4B,EAAEf,UADL;AAEzBgB,QAAAA,kBAAkB,EAAER,SAFK;AAGzBS,QAAAA,qBAAqB,EAAEJ,YAHE;AAIzBK,QAAAA,uBAAuB,EAAEL;AAJA,OAApB,CAAP;AAMD;;;iCAKYxC,G,EAAK;AAChB,UAAMhE,MAAM,GAAGgE,GAAG,CAAC8B,WAAJ,CAAgBgB,MAAhB,CAAuB9G,MAAtC;AACA,UAAME,KAAK,GAAG8D,GAAG,CAAC8B,WAAJ,CAAgBgB,MAAhB,CAAuB5G,KAArC;AAGA,UAAI6G,QAAQ,GAAG,EAAf;AACA,UAAI/G,MAAM,KAAK,KAAKyC,KAAL,CAAWzC,MAA1B,EAAkC+G,QAAQ,CAAC/G,MAAT,GAAkBA,MAAlB;AAClC,UAAIE,KAAK,KAAK,KAAKuC,KAAL,CAAWvC,KAAzB,EAAgC6G,QAAQ,CAAC7G,KAAT,GAAiBA,KAAjB;AAChC,WAAK+D,QAAL,CAAc8C,QAAd;AAEA,UAAI,KAAKC,sBAAT,EAAiC,KAAKA,sBAAL;AAClC;;;sCAKiBhD,G,EAAK;AACrB,UAAMhE,MAAM,GAAGgE,GAAG,CAAC8B,WAAJ,CAAgBgB,MAAhB,CAAuB9G,MAAtC;AACA,UAAME,KAAK,GAAG8D,GAAG,CAAC8B,WAAJ,CAAgBgB,MAAhB,CAAuB5G,KAArC;;AAGA,UACEF,MAAM,IAAI,KAAKyC,KAAL,CAAWM,eAArB,IACA7C,KAAK,IAAI,KAAKuC,KAAL,CAAWO,cAFtB,EAGE;AACA,aAAKiB,QAAL,CAAc;AAAChB,UAAAA,aAAa,EAAE;AAAhB,SAAd;AACA;AACD;;AAED,UAAI,KAAKR,KAAL,CAAWE,MAAX,IAAqB,KAAKF,KAAL,CAAWI,aAApC,EAAmD;AACjD,aAAKnB,WAAL;AACD;;AAED,UAAI,KAAKT,KAAL,CAAWgG,QAAf,EAAyB,KAAKhG,KAAL,CAAWgG,QAAX,CAAoBjD,GAApB;AACzB,WAAKC,QAAL,CAAc;AACZhB,QAAAA,aAAa,EAAE,IADH;AAEZF,QAAAA,eAAe,EAAE/C,MAFL;AAGZgD,QAAAA,cAAc,EAAE9C;AAHJ,OAAd;AAKD;;;qCAKgB;AACf,UAAI+E,QAAQ,GAAG,IAAf;;AAEA,UAAI,KAAKhE,KAAL,CAAWgE,QAAf,EAAyB;AACvBA,QAAAA,QAAQ,GACN,6BAAC,qCAAD;AACE,UAAA,OAAO,EAAE,KAAKhE,KAAL,CAAWiG,oBAAX,GAAkC,KAAK9E,KAAvC,GAA+C,IAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,6BAAC,qBAAD,CAAU,IAAV;AACE,UAAA,yBAAyB,EAAC,IAD5B;AAEE,UAAA,KAAK,EAAE,CAACjC,MAAM,CAACO,QAAR,EAAkB;AAACyG,YAAAA,OAAO,EAAE,KAAK1E,KAAL,CAAWC;AAArB,WAAlB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE,6BAAC,iBAAD;AACE,UAAA,KAAK,EAAE,CACLvC,MAAM,CAACO,QADF,EAEL;AACEH,YAAAA,eAAe,EAAE,KAAKU,KAAL,CAAWmG,aAD9B;AAEED,YAAAA,OAAO,EAAE,KAAKlG,KAAL,CAAWyB;AAFtB,WAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,EAYG,KAAKzB,KAAL,CAAWoG,eAAX,IAA8B,EAZjC,CAFF,CADF;AAmBD;;AAED,aAAOpC,QAAP;AACD;;;oCAEe;AACd,UAAMqC,IAAI,GAAG;AACXtH,QAAAA,MAAM,EAAE,KAAKyC,KAAL,CAAWM,eADR;AAEX7C,QAAAA,KAAK,EAAE,KAAKuC,KAAL,CAAWO;AAFP,OAAb;AAIA,UAAMuE,OAAO,GAAG,CAAC,KAAK9E,KAAL,CAAWO,cAAX,GAA4B,KAAKP,KAAL,CAAWvC,KAAxC,IAAiD,CAAjE;AAEA,aACE,6BAAC,qBAAD,CAAU,IAAV;AACE,QAAA,QAAQ,EAAE,KAAK6B,YADjB;AAEE,QAAA,KAAK,EAAE,CACL5B,MAAM,CAACG,OADF,EAELgH,IAFK,EAGL,KAAKrG,KAAL,CAAWuG,KAHN,EAIL;AACEC,UAAAA,SAAS,EAAE,CACT;AAACC,YAAAA,UAAU,EAAE,KAAKjF,KAAL,CAAW9B;AAAxB,WADS,EAET;AAACgH,YAAAA,UAAU,EAAEJ;AAAb,WAFS;AADb,SAJK;AAFT,SAaM,KAAK9E,KAAL,CAAWU,GAAX,CAAeyE,WAbrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAcG,KAAK3G,KAAL,CAAW4G,QAdd,CADF;AAkBD;;;6BAKQ;AAAA;;AACP,UAAMC,OAAO,GACX,KAAKrF,KAAL,CAAWE,MAAX,IACA,KAAKF,KAAL,CAAWI,aADX,IAEA,KAAKJ,KAAL,CAAWG,cAHb;AAKA,UAAI,CAACkF,OAAL,EAAc,OAAO,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AAEd,UAAMC,OAAO,GACX,6BAAC,iBAAD;AACE,QAAA,yBAAyB,EAAC,KAD5B;AAEE,QAAA,wBAAwB,EAAE,IAF5B;AAGE,QAAA,KAAK,EAAE,CAAC5H,MAAM,CAACK,WAAR,EAAqBL,MAAM,CAACO,QAA5B,CAHT;AAIE,QAAA,aAAa,EAAE,UAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE;AAACsH,UAAAA,IAAI,EAAE;AAAP,SADT;AAEE,QAAA,aAAa,EAAE,UAFjB;AAGE,QAAA,QAAQ,EAAE,KAAKhG,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG8F,OAAO,IAAI,KAAK7F,cAAL,EAJd,EAKG6F,OAAO,IAAI,KAAK5F,aAAL,EALd,CALF,CADF;;AAgBA,UAAI,CAAC,KAAKjB,KAAL,CAAWgH,WAAhB,EAA6B,OAAOF,OAAP;AAE7B,aACE,6BAAC,kBAAD;AACE,QAAA,cAAc,EAAE,0BAAM;AACpB,cAAI,MAAI,CAAC9G,KAAL,CAAW4C,eAAf,EAAgC;AAC9B,YAAA,MAAI,CAACzB,KAAL;AACD;AACF,SALH;AAME,QAAA,qBAAqB,EAAE,CACrB,WADqB,EAErB,UAFqB,EAGrB,sBAHqB,CANzB;AAWE,QAAA,WAAW,MAXb;AAYE,QAAA,OAAO,EAAE0F,OAZX;AAaE,QAAA,mBAAmB,EAAE,IAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcGC,OAdH,CADF;AAkBD;;;2BAIM;AAAA;;AACL,UAAI,KAAK9G,KAAL,CAAW2E,UAAf,EAA2B;;AAC3B,UACE,CAAC,KAAKnD,KAAL,CAAWI,aAAZ,KACC,CAAC,KAAKJ,KAAL,CAAWE,MAAZ,IAAsB,KAAKF,KAAL,CAAWG,cADlC,CADF,EAGE;AACA,aAAKoE,sBAAL,GAA8B,YAAM;AAClC,UAAA,MAAI,CAACtF,WAAL;;AACA,cAAI,MAAI,CAACT,KAAL,CAAW4C,eAAX,IAA8BT,sBAASC,EAAT,KAAgB,SAAlD,EACES,yBAAYoE,gBAAZ,CAA6B,mBAA7B,EAAkD,MAAI,CAAChH,WAAvD;AACF,UAAA,MAAI,CAAC8F,sBAAL,GAA8B,IAA9B;AACD,SALD;;AAMA,aAAK/C,QAAL,CAAc;AAACpB,UAAAA,aAAa,EAAE;AAAhB,SAAd;AACD;AACF;;;4BAEO;AACN,UAAI,KAAK5B,KAAL,CAAW2E,UAAf,EAA2B;;AAC3B,UACE,CAAC,KAAKnD,KAAL,CAAWG,cAAZ,KACC,KAAKH,KAAL,CAAWE,MAAX,IAAqB,KAAKF,KAAL,CAAWI,aADjC,CADF,EAGE;AACA,aAAKjB,YAAL;AACA,YAAI,KAAKX,KAAL,CAAW4C,eAAX,IAA8BT,sBAASC,EAAT,KAAgB,SAAlD,EACES,yBAAYC,mBAAZ,CAAgC,mBAAhC,EAAqD,KAAK7C,WAA1D;AACH;AACF;;;EApiBmCiH,eAAMC,a;;;AAAvBpH,Q,CACZqH,S,GAAY;AACjB1F,EAAAA,MAAM,EAAE2F,mBAAUC,IADD;AAEjB3C,EAAAA,UAAU,EAAE0C,mBAAUC,IAFL;AAGjBlG,EAAAA,SAAS,EAAEiG,mBAAUC,IAHJ;AAIjBrB,EAAAA,oBAAoB,EAAEoB,mBAAUC,IAJf;AAKjBzF,EAAAA,YAAY,EAAEwF,mBAAUC,IALP;AAMjBjC,EAAAA,cAAc,EAAEgC,mBAAUE,MANT;AAOjB3C,EAAAA,SAAS,EAAEyC,mBAAUE,MAPJ;AAQjB7H,EAAAA,QAAQ,EAAE2H,mBAAUG,MARH;AASjBjG,EAAAA,KAAK,EAAE8F,mBAAUG,MATA;AAUjBxD,EAAAA,QAAQ,EAAEqD,mBAAUC,IAVH;AAWjB7F,EAAAA,eAAe,EAAE4F,mBAAUE,MAXV;AAYjBpB,EAAAA,aAAa,EAAEkB,mBAAUG,MAZR;AAajBpB,EAAAA,eAAe,EAAEiB,mBAAUI,OAbV;AAcjB9D,EAAAA,iBAAiB,EAAE0D,mBAAUE,MAdZ;AAejB3E,EAAAA,eAAe,EAAEyE,mBAAUC,IAfV;AAgBjB1D,EAAAA,MAAM,EAAEyD,mBAAUK,IAhBD;AAiBjBV,EAAAA,WAAW,EAAEK,mBAAUC,IAjBN;AAkBjBnD,EAAAA,iBAAiB,EAAEkD,mBAAUE,MAlBZ;AAmBjBhD,EAAAA,QAAQ,EAAE8C,mBAAUK,IAnBH;AAoBjBtD,EAAAA,QAAQ,EAAEiD,mBAAUK,IApBH;AAqBjBpC,EAAAA,cAAc,EAAE+B,mBAAUK;AArBT,C;AADA3H,Q,CAyBZ4H,Y,GAAe;AACpBvG,EAAAA,SAAS,EAAE,KADS;AAEpB6E,EAAAA,oBAAoB,EAAE,IAFF;AAGpBpE,EAAAA,YAAY,EAAE,IAHM;AAIpBwD,EAAAA,cAAc,EAAE,EAJI;AAKpB3F,EAAAA,QAAQ,EAAE,QALU;AAMpBsE,EAAAA,QAAQ,EAAE,IANU;AAOpBvC,EAAAA,eAAe,EAAE,GAPG;AAQpB0E,EAAAA,aAAa,EAAE,OARK;AASpBC,EAAAA,eAAe,EAAE,IATG;AAUpBzC,EAAAA,iBAAiB,EAAE,GAVC;AAWpBf,EAAAA,eAAe,EAAE,KAXG;AAYpBgB,EAAAA,MAAM,EAAEgE,oBAAOC,OAAP,CAAe,GAAf,CAZY;AAapBb,EAAAA,WAAW,EAAE,KAbO;AAcpB7C,EAAAA,iBAAiB,EAAEhC,sBAASC,EAAT,IAAe,KAAf,GAAuB,EAAvB,GAA4B,CAd3B;AAepByB,EAAAA,eAAe,EAAE;AAfG,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  PanResponder,\n  Animated,\n  TouchableWithoutFeedback,\n  Dimensions,\n  Easing,\n  BackHandler,\n  Platform,\n  Modal,\n  Keyboard\n} from 'react-native';\n\nconst {height: SCREEN_HEIGHT, width: SCREEN_WIDTH} = Dimensions.get('window');\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: 'white'\n  },\n  transparent: {\n    zIndex: 2,\n    backgroundColor: 'rgba(0,0,0,0)'\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n});\n\nexport default class ModalBox extends React.PureComponent {\n  static propTypes = {\n    isOpen: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    startOpen: PropTypes.bool,\n    backdropPressToClose: PropTypes.bool,\n    swipeToClose: PropTypes.bool,\n    swipeThreshold: PropTypes.number,\n    swipeArea: PropTypes.number,\n    position: PropTypes.string,\n    entry: PropTypes.string,\n    backdrop: PropTypes.bool,\n    backdropOpacity: PropTypes.number,\n    backdropColor: PropTypes.string,\n    backdropContent: PropTypes.element,\n    animationDuration: PropTypes.number,\n    backButtonClose: PropTypes.bool,\n    easing: PropTypes.func,\n    coverScreen: PropTypes.bool,\n    keyboardTopOffset: PropTypes.number,\n    onClosed: PropTypes.func,\n    onOpened: PropTypes.func,\n    onClosingState: PropTypes.func\n  };\n\n  static defaultProps = {\n    startOpen: false,\n    backdropPressToClose: true,\n    swipeToClose: true,\n    swipeThreshold: 50,\n    position: 'center',\n    backdrop: true,\n    backdropOpacity: 0.5,\n    backdropColor: 'black',\n    backdropContent: null,\n    animationDuration: 400,\n    backButtonClose: false,\n    easing: Easing.elastic(0.8),\n    coverScreen: false,\n    keyboardTopOffset: Platform.OS == 'ios' ? 22 : 0,\n    useNativeDriver: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onBackPress = this.onBackPress.bind(this);\n    this.handleOpenning = this.handleOpenning.bind(this);\n    this.onKeyboardHide = this.onKeyboardHide.bind(this);\n    this.onKeyboardChange = this.onKeyboardChange.bind(this);\n    this.animateBackdropOpen = this.animateBackdropOpen.bind(this);\n    this.animateBackdropClose = this.animateBackdropClose.bind(this);\n    this.stopAnimateOpen = this.stopAnimateOpen.bind(this);\n    this.animateOpen = this.animateOpen.bind(this);\n    this.stopAnimateClose = this.stopAnimateClose.bind(this);\n    this.animateClose = this.animateClose.bind(this);\n    this.calculateModalPosition = this.calculateModalPosition.bind(this);\n    this.createPanResponder = this.createPanResponder.bind(this);\n    this.onViewLayout = this.onViewLayout.bind(this);\n    this.onContainerLayout = this.onContainerLayout.bind(this);\n    this.renderBackdrop = this.renderBackdrop.bind(this);\n    this.renderContent = this.renderContent.bind(this);\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n\n    const position = props.startOpen\n      ? new Animated.Value(0)\n      : new Animated.Value(\n          props.entry === 'top' ? -SCREEN_HEIGHT : SCREEN_HEIGHT\n        );\n    this.state = {\n      position,\n      backdropOpacity: new Animated.Value(0),\n      isOpen: props.startOpen,\n      isAnimateClose: false,\n      isAnimateOpen: false,\n      swipeToClose: false,\n      height: SCREEN_HEIGHT,\n      width: SCREEN_WIDTH,\n      containerHeight: SCREEN_HEIGHT,\n      containerWidth: SCREEN_WIDTH,\n      isInitialized: false,\n      keyboardOffset: 0,\n      pan: this.createPanResponder(position)\n    };\n\n    // Needed for iOS because the keyboard covers the screen\n    if (Platform.OS === 'ios') {\n      this.subscriptions = [\n        Keyboard.addListener('keyboardWillChangeFrame', this.onKeyboardChange),\n        Keyboard.addListener('keyboardDidHide', this.onKeyboardHide)\n      ];\n    }\n  }\n\n  componentDidMount() {\n    this.handleOpenning();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isOpen != prevProps.isOpen) {\n      this.handleOpenning();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.subscriptions) this.subscriptions.forEach(sub => sub.remove());\n    if (this.props.backButtonClose && Platform.OS === 'android')\n      BackHandler.removeEventListener('hardwareBackPress', this.onBackPress);\n  }\n\n  onBackPress() {\n    this.close();\n    return true;\n  }\n\n  handleOpenning() {\n    if (typeof this.props.isOpen == 'undefined') return;\n    if (this.props.isOpen) this.open();\n    else this.close();\n  }\n\n  /****************** ANIMATIONS **********************/\n\n  /*\n   * The keyboard is hidden (IOS only)\n   */\n  onKeyboardHide(evt) {\n    this.setState({keyboardOffset: 0});\n  }\n\n  /*\n   * The keyboard frame changed, used to detect when the keyboard open, faster than keyboardDidShow (IOS only)\n   */\n  onKeyboardChange(evt) {\n    if (!evt) return;\n    if (!this.state.isOpen) return;\n    const keyboardFrame = evt.endCoordinates;\n    const keyboardHeight = this.state.containerHeight - keyboardFrame.screenY;\n\n    this.setState({keyboardOffset: keyboardHeight}, () => {\n      this.animateOpen();\n    });\n  }\n\n  /*\n   * Open animation for the backdrop, will fade in\n   */\n  animateBackdropOpen() {\n    if (this.state.isAnimateBackdrop && this.state.animBackdrop) {\n      this.state.animBackdrop.stop();\n    }\n    this.setState({isAnimateBackdrop: true});\n\n    let animBackdrop = Animated.timing(this.state.backdropOpacity, {\n      toValue: 1,\n      duration: this.props.animationDuration,\n      easing: this.props.easing,\n      useNativeDriver: this.props.useNativeDriver\n    }).start(() => {\n      this.setState({\n        isAnimateBackdrop: false,\n        animBackdrop\n      });\n    });\n  }\n\n  /*\n   * Close animation for the backdrop, will fade out\n   */\n  animateBackdropClose() {\n    if (this.state.isAnimateBackdrop && this.state.animBackdrop) {\n      this.state.animBackdrop.stop();\n    }\n    this.setState({isAnimateBackdrop: true});\n\n    let animBackdrop = Animated.timing(this.state.backdropOpacity, {\n      toValue: 0,\n      duration: this.props.animationDuration,\n      easing: this.props.easing,\n      useNativeDriver: this.props.useNativeDriver\n    }).start(() => {\n      this.setState({\n        isAnimateBackdrop: false,\n        animBackdrop\n      });\n    });\n  }\n\n  /*\n   * Stop opening animation\n   */\n  stopAnimateOpen() {\n    if (this.state.isAnimateOpen) {\n      if (this.state.animOpen) this.state.animOpen.stop();\n      this.setState({isAnimateOpen: false});\n    }\n  }\n\n  /*\n   * Open animation for the modal, will move up\n   */\n  animateOpen() {\n    this.stopAnimateClose();\n\n    // Backdrop fadeIn\n    if (this.props.backdrop) this.animateBackdropOpen();\n\n    this.setState(\n      {\n        isAnimateOpen: true,\n        isOpen: true\n      },\n      () => {\n        requestAnimationFrame(() => {\n          // Detecting modal position\n          let positionDest = this.calculateModalPosition(\n            this.state.containerHeight - this.state.keyboardOffset,\n            this.state.containerWidth\n          );\n          if (\n            this.state.keyboardOffset &&\n            positionDest < this.props.keyboardTopOffset\n          ) {\n            positionDest = this.props.keyboardTopOffset;\n          }\n          let animOpen = Animated.timing(this.state.position, {\n            toValue: positionDest,\n            duration: this.props.animationDuration,\n            easing: this.props.easing,\n            useNativeDriver: this.props.useNativeDriver\n          }).start(() => {\n            this.setState({\n              isAnimateOpen: false,\n              animOpen,\n              positionDest\n            });\n            if (this.props.onOpened) this.props.onOpened();\n          });\n        });\n      }\n    );\n  }\n\n  /*\n   * Stop closing animation\n   */\n  stopAnimateClose() {\n    if (this.state.isAnimateClose) {\n      if (this.state.animClose) this.state.animClose.stop();\n      this.setState({isAnimateClose: false});\n    }\n  }\n\n  /*\n   * Close animation for the modal, will move down\n   */\n  animateClose() {\n    this.stopAnimateOpen();\n\n    // Backdrop fadeout\n    if (this.props.backdrop) this.animateBackdropClose();\n\n    this.setState(\n      {\n        isAnimateClose: true,\n        isOpen: false\n      },\n      () => {\n        let animClose = Animated.timing(this.state.position, {\n          toValue:\n            this.props.entry === 'top'\n              ? -this.state.containerHeight\n              : this.state.containerHeight,\n          duration: this.props.animationDuration,\n          easing: this.props.easing,\n          useNativeDriver: this.props.useNativeDriver\n        }).start(() => {\n          // Keyboard.dismiss();   // make this optional. Easily user defined in .onClosed() callback\n          this.setState({\n            isAnimateClose: false,\n            animClose\n          }, () => {\n            /* Set the state to the starting position of the modal, preventing from animating where the swipe stopped */\n            this.state.position.setValue(this.props.entry === 'top' ? -this.state.containerHeight : this.state.containerHeight);\n          });\n          if (this.props.onClosed) this.props.onClosed();\n        });\n      }\n    );\n  }\n\n  /*\n   * Calculate when should be placed the modal\n   */\n  calculateModalPosition(containerHeight, containerWidth) {\n    let position = 0;\n\n    if (this.props.position == 'bottom') {\n      position = containerHeight - this.state.height;\n    } else if (this.props.position == 'center') {\n      position = containerHeight / 2 - this.state.height / 2;\n    }\n    // Checking if the position >= 0\n    if (position < 0) position = 0;\n    return position;\n  }\n\n  /*\n   * Create the pan responder to detect gesture\n   * Only used if swipeToClose is enabled\n   */\n  createPanResponder(position) {\n    let closingState = false;\n    let inSwipeArea = false;\n\n    const onPanStart = (evt, state) => {\n      if (\n        !this.props.swipeToClose ||\n        this.props.isDisabled ||\n        (this.props.swipeArea &&\n          evt.nativeEvent.pageY - this.state.positionDest >\n            this.props.swipeArea)\n      ) {\n        inSwipeArea = false;\n        return false;\n      }\n      inSwipeArea = true;\n      return true;\n    };\n\n    const animEvt = Animated.event([null, {customY: position}], {useNativeDriver: false});\n\n    const onPanMove = (evt, state) => {\n      const newClosingState =\n        this.props.entry === 'top'\n          ? -state.dy > this.props.swipeThreshold\n          : state.dy > this.props.swipeThreshold;\n      if (this.props.entry === 'top' ? state.dy > 0 : state.dy < 0) return;\n      if (newClosingState != closingState && this.props.onClosingState)\n        this.props.onClosingState(newClosingState);\n      closingState = newClosingState;\n      state.customY = state.dy + this.state.positionDest;\n\n      animEvt(evt, state);\n    };\n\n    const onPanRelease = (evt, state) => {\n      if (!inSwipeArea) return;\n      inSwipeArea = false;\n      if (\n        this.props.entry === 'top'\n          ? -state.dy > this.props.swipeThreshold\n          : state.dy > this.props.swipeThreshold\n      ) {\n        this.close();\n      } else if (!this.state.isOpen) {\n        this.animateOpen();\n      }\n    };\n\n    return PanResponder.create({\n      onStartShouldSetPanResponder: onPanStart,\n      onPanResponderMove: onPanMove,\n      onPanResponderRelease: onPanRelease,\n      onPanResponderTerminate: onPanRelease\n    });\n  }\n\n  /*\n   * Event called when the modal view layout is calculated\n   */\n  onViewLayout(evt) {\n    const height = evt.nativeEvent.layout.height;\n    const width = evt.nativeEvent.layout.width;\n\n    // If the dimensions are still the same we're done\n    let newState = {};\n    if (height !== this.state.height) newState.height = height;\n    if (width !== this.state.width) newState.width = width;\n    this.setState(newState);\n\n    if (this.onViewLayoutCalculated) this.onViewLayoutCalculated();\n  }\n\n  /*\n   * Event called when the container view layout is calculated\n   */\n  onContainerLayout(evt) {\n    const height = evt.nativeEvent.layout.height;\n    const width = evt.nativeEvent.layout.width;\n\n    // If the container size is still the same we're done\n    if (\n      height == this.state.containerHeight &&\n      width == this.state.containerWidth\n    ) {\n      this.setState({isInitialized: true});\n      return;\n    }\n\n    if (this.state.isOpen || this.state.isAnimateOpen) {\n      this.animateOpen();\n    }\n\n    if (this.props.onLayout) this.props.onLayout(evt);\n    this.setState({\n      isInitialized: true,\n      containerHeight: height,\n      containerWidth: width\n    });\n  }\n\n  /*\n   * Render the backdrop element\n   */\n  renderBackdrop() {\n    let backdrop = null;\n\n    if (this.props.backdrop) {\n      backdrop = (\n        <TouchableWithoutFeedback\n          onPress={this.props.backdropPressToClose ? this.close : null}>\n          <Animated.View\n            importantForAccessibility=\"no\"\n            style={[styles.absolute, {opacity: this.state.backdropOpacity}]}>\n            <View\n              style={[\n                styles.absolute,\n                {\n                  backgroundColor: this.props.backdropColor,\n                  opacity: this.props.backdropOpacity\n                }\n              ]}\n            />\n            {this.props.backdropContent || []}\n          </Animated.View>\n        </TouchableWithoutFeedback>\n      );\n    }\n\n    return backdrop;\n  }\n\n  renderContent() {\n    const size = {\n      height: this.state.containerHeight,\n      width: this.state.containerWidth\n    };\n    const offsetX = (this.state.containerWidth - this.state.width) / 2;\n\n    return (\n      <Animated.View\n        onLayout={this.onViewLayout}\n        style={[\n          styles.wrapper,\n          size,\n          this.props.style,\n          {\n            transform: [\n              {translateY: this.state.position},\n              {translateX: offsetX}\n            ]\n          }\n        ]}\n        {...this.state.pan.panHandlers}>\n        {this.props.children}\n      </Animated.View>\n    );\n  }\n\n  /*\n   * Render the component\n   */\n  render() {\n    const visible =\n      this.state.isOpen ||\n      this.state.isAnimateOpen ||\n      this.state.isAnimateClose;\n\n    if (!visible) return <View />;\n\n    const content = (\n      <View\n        importantForAccessibility=\"yes\"\n        accessibilityViewIsModal={true}\n        style={[styles.transparent, styles.absolute]}\n        pointerEvents={'box-none'}>\n        <View\n          style={{flex: 1}}\n          pointerEvents={'box-none'}\n          onLayout={this.onContainerLayout}>\n          {visible && this.renderBackdrop()}\n          {visible && this.renderContent()}\n        </View>\n      </View>\n    );\n\n    if (!this.props.coverScreen) return content;\n\n    return (\n      <Modal\n        onRequestClose={() => {\n          if (this.props.backButtonClose) {\n            this.close();\n          }\n        }}\n        supportedOrientations={[\n          'landscape',\n          'portrait',\n          'portrait-upside-down'\n        ]}\n        transparent\n        visible={visible}\n        hardwareAccelerated={true}>\n        {content}\n      </Modal>\n    );\n  }\n\n  /****************** PUBLIC METHODS **********************/\n\n  open() {\n    if (this.props.isDisabled) return;\n    if (\n      !this.state.isAnimateOpen &&\n      (!this.state.isOpen || this.state.isAnimateClose)\n    ) {\n      this.onViewLayoutCalculated = () => {\n        this.animateOpen();\n        if (this.props.backButtonClose && Platform.OS === 'android')\n          BackHandler.addEventListener('hardwareBackPress', this.onBackPress);\n        this.onViewLayoutCalculated = null;\n      };\n      this.setState({isAnimateOpen: true});\n    }\n  }\n\n  close() {\n    if (this.props.isDisabled) return;\n    if (\n      !this.state.isAnimateClose &&\n      (this.state.isOpen || this.state.isAnimateOpen)\n    ) {\n      this.animateClose();\n      if (this.props.backButtonClose && Platform.OS === 'android')\n        BackHandler.removeEventListener('hardwareBackPress', this.onBackPress);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}