{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar STORAGE_KEY = '@save_score';\n\nvar saveData = function saveData(score) {\n  return _regenerator.default.async(function saveData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.setItem(STORAGE_KEY, score));\n\n        case 3:\n          alert('Data successfully saved');\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          alert(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar readData = function readData() {\n  var userScore;\n  return _regenerator.default.async(function readData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem(STORAGE_KEY));\n\n        case 3:\n          userScore = _context2.sent;\n          alert(userScore);\n\n          if (userScore !== null) {\n            setHighscore(userScore);\n          }\n\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          alert(_context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar setHighscore = function setHighscore(userScore) {\n  var newHighScore = userScore;\n};\n\nvar clearStorage = function clearStorage() {\n  return _regenerator.default.async(function clearStorage$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.clear());\n\n        case 3:\n          alert('Storage successfully cleared!');\n          _context3.next = 9;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          alert('Failed to clear the async storage.');\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nmodule.exports = {\n  readData: readData,\n  saveData: saveData\n};","map":{"version":3,"sources":["C:/Users/Amanda/Documents/KOMA/project/MTDuellen/src/components/Storage.js"],"names":["STORAGE_KEY","saveData","score","AsyncStorage","setItem","alert","readData","getItem","userScore","setHighscore","newHighScore","clearStorage","clear","module","exports"],"mappings":";;;;AAAA;;AAKA,IAAMA,WAAW,GAAG,aAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEPC,sBAAaC,OAAb,CAAqBJ,WAArB,EAAkCE,KAAlC,CAFO;;AAAA;AAGbG,UAAAA,KAAK,CAAC,yBAAD,CAAL;AAHa;AAAA;;AAAA;AAAA;AAAA;AAKbA,UAAAA,KAAK,aAAL;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEWH,sBAAaI,OAAb,CAAqBP,WAArB,CAFX;;AAAA;AAEPQ,UAAAA,SAFO;AAGbH,UAAAA,KAAK,CAACG,SAAD,CAAL;;AACA,cAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtBC,YAAAA,YAAY,CAACD,SAAD,CAAZ;AACD;;AANY;AAAA;;AAAA;AAAA;AAAA;AAQbH,UAAAA,KAAK,cAAL;;AARa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAYA,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACD,SAAD,EAAe;AACpC,MAAME,YAAY,GAAGF,SAArB;AACC,CAFD;;AAQA,IAAMG,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEXR,sBAAaS,KAAb,EAFW;;AAAA;AAGjBP,UAAAA,KAAK,CAAC,+BAAD,CAAL;AAHiB;AAAA;;AAAA;AAAA;AAAA;AAKjBA,UAAAA,KAAK,CAAC,oCAAD,CAAL;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AASAQ,MAAM,CAACC,OAAP,GAAiB;AAACR,EAAAA,QAAQ,EAARA,QAAD;AAAWL,EAAAA,QAAQ,EAARA;AAAX,CAAjB","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\r\n\r\n// ----------------------------------\r\n// Becca testar AsyncStorage\r\n// ----------------------------------\r\nconst STORAGE_KEY = '@save_score'\r\n\r\nconst saveData = async (score) => {\r\n  try {\r\n    await AsyncStorage.setItem(STORAGE_KEY, score)\r\n    alert('Data successfully saved')\r\n  } catch (e) {\r\n    alert(e)\r\n  }\r\n}\r\n\r\nconst readData = async () => {\r\n  try {\r\n    const userScore = await AsyncStorage.getItem(STORAGE_KEY)\r\n    alert(userScore)\r\n    if (userScore !== null) {\r\n      setHighscore(userScore)\r\n    }\r\n  } catch (e) {\r\n    alert(e)\r\n  }\r\n}\r\n\r\nconst setHighscore = (userScore) => {\r\nconst newHighScore = userScore;\r\n}\r\n\r\n// useEffect(() => {\r\n//   readData()\r\n// }, [])\r\n\r\nconst clearStorage = async () => {\r\n  try {\r\n    await AsyncStorage.clear()\r\n    alert('Storage successfully cleared!')\r\n  } catch (e) {\r\n    alert('Failed to clear the async storage.')\r\n  }\r\n};\r\n\r\nmodule.exports = {readData, saveData}"]},"metadata":{},"sourceType":"script"}